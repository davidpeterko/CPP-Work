{"name":"C++ Work","tagline":"This is a page for my C++ Work","body":"## My C++ Work \r\n\r\n### Generic Programming & The STL\r\n\r\nI am experienced with the use of the STL in C++ as well as the concepts and application of 'generic programming.' This page is supposed to include my school work in C++ but by request by Professor Glenn Downing of the University of Texas, my school work and github repositories by his wishes need to remain private due to future semesters of the class. If you are a recruiter wishing to see my C++ work, please email me and I can add you as a collaborator to all the related repositories so you can view my source code. \r\n\r\n\r\n### Knowledge\r\n\r\nI have learned the concepts of C++ and the STL throughout my time here at UT which include but not limited to: \r\n. the STl containers (vector, deque, etc)\r\n. iterators and iterator adaptors\r\n. concept of class templates, function tempaltes, and typenames\r\n. exceptions\r\n. const references vs const values\r\n. pass by address, value, or reference\r\n. \r\n. a source control system (e.g. Git)\r\n. an issue tracker (e.g. GitHub)\r\n. assertions\r\n. exceptions\r\n. unit tests (e.g. GTest)\r\n. acceptance tests\r\n. a coverage tool (gcov)\r\n. a debugger (e.g. gdb)\r\n. a memory checker (e.g. Valgrind)\r\n. a profiler (e.g. gprof)\r\n. a documentation tool (e.g. Doxygen)\r\n. an IDE (e.g. Xcode)\r\n. UML\r\n. libraries (e.g. Boost)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}